import{_ as s,c as i,o as a,a4 as t}from"./chunks/framework.D1FvBl6c.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"study/XML与JSON.md","filePath":"study/XML与JSON.md","lastUpdated":null}'),n={name:"study/XML与JSON.md"},l=t(`<h2 id="两种数据交换格式xml与json" tabindex="-1">两种数据交换格式xml与json <a class="header-anchor" href="#两种数据交换格式xml与json" aria-label="Permalink to &quot;两种数据交换格式xml与json&quot;">​</a></h2><h3 id="_1-先看本质-它们是什么" tabindex="-1">1. 先看本质：它们是什么？ <a class="header-anchor" href="#_1-先看本质-它们是什么" aria-label="Permalink to &quot;1. 先看本质：它们是什么？&quot;">​</a></h3><p><strong>XML（可扩展标记语言）</strong></p><blockquote><p>像<strong>合同文档</strong>，用标签包裹数据，结构严谨，适合复杂场景。</p></blockquote><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;张三&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">age</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;30&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">age</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">hobbies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">hobby</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;编程&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">hobby</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">hobby</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;火锅&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">hobby</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">hobbies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p><strong>JSON（ JavaScript Object Notation JavaScript对象表示法 / JS对象简谱）</strong></p><blockquote><p>像<strong>外卖订单</strong>，用键值对直接描述数据，轻量灵活，适合快速交互。</p></blockquote><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;张三&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;age&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;hobbies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;编程&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;火锅&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_2-优缺点总结" tabindex="-1">2.优缺点总结 <a class="header-anchor" href="#_2-优缺点总结" aria-label="Permalink to &quot;2.优缺点总结&quot;">​</a></h3><p><strong>XML的优点</strong></p><ul><li><strong>严格的结构</strong>：适合需要强验证的场景（如银行交易报文）。</li><li><strong>支持注释和元数据</strong>：可通过属性（如<code>10</code>）添加额外信息。</li><li><strong>行业标准</strong>：金融、医疗等传统行业仍广泛使用（如SOAP协议）。</li></ul><p><strong>XML的缺点</strong></p><ul><li><strong>冗余臃肿</strong>：标签重复导致传输效率低。</li><li><strong>解析麻烦</strong>：需要DOM或SAX解析器，代码量大。</li><li><strong>学习成本高</strong>：XPath、XSLT等配套技术复杂。</li></ul><p><strong>JSON的优点</strong></p><ul><li><strong>轻量高效</strong>：网络传输快，尤其适合移动端。</li><li><strong>与JavaScript无缝集成</strong>：前端直接<code>JSON.parse()</code>即可用。</li><li><strong>开发友好</strong>：现代API（如RESTful）几乎全用JSON。</li></ul><p><strong>JSON的缺点</strong></p><ul><li><strong>无法表达复杂数据</strong>：比如混合内容文本（文本中嵌入标签）。</li><li><strong>缺乏注释</strong>：不能直接在数据中添加说明（需额外字段）。</li><li><strong>安全性问题</strong>：直接<code>eval()</code>解析有风险（需用<code>JSON.parse()</code>）。</li></ul><h3 id="_3-什么时候用谁" tabindex="-1">3. 什么时候用谁？ <a class="header-anchor" href="#_3-什么时候用谁" aria-label="Permalink to &quot;3. 什么时候用谁？&quot;">​</a></h3><h4 id="用xml的场景" tabindex="-1"><strong>用XML的场景</strong> <a class="header-anchor" href="#用xml的场景" aria-label="Permalink to &quot;**用XML的场景**&quot;">​</a></h4><ul><li><strong>企业级系统对接</strong>：比如银行跨境支付（SWIFT报文）。</li><li><strong>需要文档验证</strong>：用XSD确保数据格式绝对正确。</li><li><strong>混合内容处理</strong>：比如HTML片段（<code>Hello World</code>）。</li></ul><h4 id="用json的场景" tabindex="-1"><strong>用JSON的场景</strong> <a class="header-anchor" href="#用json的场景" aria-label="Permalink to &quot;**用JSON的场景**&quot;">​</a></h4><ul><li><strong>Web API交互</strong>：前后端传数据（90%的REST API用JSON）。</li><li><strong>配置文件</strong>：比如VSCode的<code>settings.json</code>。</li><li><strong>NoSQL数据库</strong>：MongoDB直接存储JSON文档。</li></ul>`,22),h=[l];function e(o,p,r,k,E,g){return a(),i("div",null,h)}const u=s(n,[["render",e]]);export{c as __pageData,u as default};
