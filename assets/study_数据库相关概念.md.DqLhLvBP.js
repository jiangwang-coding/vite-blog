import{_ as s,c as i,o as a,a4 as n}from"./chunks/framework.D1FvBl6c.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"study/数据库相关概念.md","filePath":"study/数据库相关概念.md","lastUpdated":null}'),t={name:"study/数据库相关概念.md"},p=n(`<h2 id="数据库" tabindex="-1">数据库 <a class="header-anchor" href="#数据库" aria-label="Permalink to &quot;数据库&quot;">​</a></h2><p><strong>数据库相关概念</strong>：数据库DB是存储和管理数据的仓库，数据库管理系统DBMS用于操作和管理数据库，SQL语句是操作关系型数据库的编程语言。</p><p><strong>数据模型</strong>：MySQL是关系型数据库，基于二维表存储数据，一个数据库服务器可创建多个数据库，一个数据库可包含多张表。</p><p><strong>SQL语句</strong>：分为DDL、DML、DQL、DCL 。DDL用于定义数据库对象；DML用于对表中数据记录进行增、删、改；DQL用于查询数据库表中的记录；DCL用于创建数据库用户、控制数据库的访问权限。</p><p><strong>约束与数据类型</strong>：MySQL有5种约束保证数据正确性等，数据类型主要分数值、字符串、日期时间三类。</p><p><strong>查询操作</strong>：DQL查询包括基本、条件、分组、排序、分页查询，还介绍了聚合函数的使用 。</p><p>**结论：**程序员给数据库管理系统(DBMS)发送SQL语句，再由数据库管理系统操作数据库当中的数据。</p><p><strong>DDL语句</strong></p><p>我们在进行数据库设计时，需要使用到SQL分类中的DDL语句。</p><p>DDL英文全称是Data Definition Language(数据定义语言)，用来定义数据库对象(数据库、表)。</p><p><strong>DDL中数据库的常见操作：查询、创建、使用、删除。</strong></p><p>查询所有数据库</p><div class="language-SQL vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">SQL</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">show databases;</span></span></code></pre></div><p>查询当前数据库</p><div class="language-SQL vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">SQL</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> database</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 查询结果为NULL表示没有使用数据库</span></span></code></pre></div><p>创建数据库</p><div class="language-SQL vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">SQL</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> database</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ if not exists ] 数据库名  [default charset utf8mb4];</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 直接创建数据库</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> database</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mydb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 数据库不存在,则创建该数据库；如果存在则不创建</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> database</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> not</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> exists</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mydb;</span></span></code></pre></div><p>使用数据库</p><div class="language-SQL vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">SQL</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 数据库名 ;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mydb;</span></span></code></pre></div><p>删除数据库</p><div class="language-SQL vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">SQL</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">drop</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> database</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ if exists ] 数据库名 ;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">drop</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> database</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> exists</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mydb; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- mydb数据库存在时删除</span></span></code></pre></div><p><strong>DDL语句当中关于表结构的操作也是包含四个部分：创建表、查询表、修改表、删除表。</strong></p><p>创建表</p><div class="language-SQL vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">SQL</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  表名</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        字段1  字段1类型 [约束]  [comment  字段1注释 ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        字段2  字段2类型 [约束]  [comment  字段2注释 ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ......</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        字段n  字段n类型 [约束]  [comment  字段n注释 ] </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) [ comment  表注释 ] ;</span></span></code></pre></div><p><strong>约束</strong>：所谓约束就是作用在表中字段上的规则，用于限制存储在表中的数据。约束是作用于表中字段上的，可以在创建表/修改表的时候添加约束。</p><p>在MySQL数据库中，提供了6种常用约束：非空约束，唯一约束，主键约束，默认约束，外键约束，自增约束。</p><p>非空约束：限制该字段值不能为null NOT NULL</p><p>唯一约束：保证字段的所有数据都是唯一、不重复的 UNIQUE</p><p>主键约束：主键是一行数据的唯一标识，要求非空且唯一 PRIMARY KEY</p><p>默认约束：保存数据时，如果未指定该字段值，则采用默认值 DEFAULT</p><p>外键约束：让两张表的数据建立连接，保证数据的一致性和完整性 FOREIGN KEY</p><p>自增约束：某个字段的值自增长，一般是id自增 AUTO_INCREMENT</p><div class="language-SQL vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">SQL</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> tb_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> primary key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> auto_increment comment </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ID,唯一标识&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 主键自增</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">not null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> unique</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> comment </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;用户名&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">not null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> comment </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;姓名&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    age </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> comment </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;年龄&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    gender </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">char</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;男&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> comment </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;性别&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) comment </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;用户表&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p><strong>数据类型</strong></p><p>MySQL中的数据类型有很多，主要分为三类：数值类型、字符串类型、日期时间类型</p><p>Unix 时间戳广泛应用于计算机系统和编程中，用于表示时间和日期。例如，在数据库中可以使用时间戳字段来确保数据的唯一性和一致性</p><p><strong>TIMESTAMP</strong>存储的是 <strong>UTC 时间</strong>，但会根据你连接的时区自动显示为对应的本地时间，而 <code>DATETIME</code> 存的是你写入的“字面时间”，不涉及时区转换。 -- 时间戳 国际化</p><p><strong>DML语句</strong></p><p>DML英文全称是Data Manipulation Language(数据操作语言)，用来对数据库中表的数据记录进行增、删、改操作。</p><p>添加数据（INSERT）</p><p>向指定字段添加数据</p><div class="language-SQL vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">SQL</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">insert into</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表名 (字段名1, 字段名2) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">values</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (值1, 值2);</span></span></code></pre></div><p>全部字段添加数据</p><div class="language-SQL vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">SQL</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">insert into</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表名 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">values</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (值1, 值2, ...);</span></span></code></pre></div><p>批量添加数据（指定字段）</p><div class="language-SQL vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">SQL</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">insert into</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表名 (字段名1, 字段名2) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">values</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (值1, 值2), (值1, 值2);</span></span></code></pre></div><p>批量添加数据（全部字段）</p><div class="language-SQL vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">SQL</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">insert into</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表名 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">values</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (值1, 值2, ...), (值1, 值2, ...);</span></span></code></pre></div><p><strong>注意事项：</strong></p><p>​ 1.插入数据时，指定的字段顺序需要与值的顺序是一一对应的。</p><p>​ 2.字符串和日期型数据应该包含在引号中。</p><p>​ 3.插入的数据大小，应该在字段的规定范围内。</p><p>修改数据（UPDATE）</p><div class="language-SQL vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">SQL</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表名 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 字段名1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 值1 , 字段名2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 值2 , .... [where 条件] ;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 将tb_user表中id为1的用户，姓名name字段更新为&#39;张三&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tb_user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> name=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;张三&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, update_time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=now</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p><strong>注意事项:</strong></p><ol><li>修改语句的条件可以有，也可以没有，如果没有条件，则会修改整张表的所有数据。</li><li>在修改数据时，一般需要同时修改公共字段update_time，将其修改为当前操作时间。</li></ol><p>删除数据（DELETE）</p>`,57),h=[p];function l(e,k,d,r,E,g){return a(),i("div",null,h)}const y=s(t,[["render",l]]);export{c as __pageData,y as default};
