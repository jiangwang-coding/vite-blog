import{_ as a,c as t,o as i,a4 as r}from"./chunks/framework.D1FvBl6c.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"study/接口与API接口.md","filePath":"study/接口与API接口.md","lastUpdated":null}'),o={name:"study/接口与API接口.md"},l=r('<h2 id="接口与api接口" tabindex="-1">接口与API接口 <a class="header-anchor" href="#接口与api接口" aria-label="Permalink to &quot;接口与API接口&quot;">​</a></h2><h3 id="接口" tabindex="-1">接口 <a class="header-anchor" href="#接口" aria-label="Permalink to &quot;接口&quot;">​</a></h3><ul><li>定义：在编程中，接口是一种<strong>抽象规范</strong>，定义了一组方法或属性的签名（名称、参数、返回值），但不提供具体实现。它用于约定不同代码组件之间的交互方式。</li><li>主要用途： <ul><li>代码解耦：通过接口隔离实现与调用方，例如依赖注入。</li><li>多态性：允许不同类实现同一接口，以统一的方式调用。</li><li>协作约定：模块或类之间通过接口定义交互规则。</li></ul></li></ul><h3 id="api接口-application-programming-interface" tabindex="-1">API接口**（Application Programming Interface）** <a class="header-anchor" href="#api接口-application-programming-interface" aria-label="Permalink to &quot;API接口**（Application Programming Interface）**&quot;">​</a></h3><ul><li><strong>定义</strong>： API是​<strong>​应用程序编程接口​</strong>​，是一组预定义的协议、工具和功能，供开发者调用以实现特定功能。它可以是本地的（如库函数）或远程的（如Web服务）。</li><li><strong>主要用途</strong>： <ul><li><strong>系统间通信</strong>：例如通过HTTP调用第三方服务（如地图API）。</li><li><strong>功能复用</strong>：直接使用现成的功能（如操作系统的文件读写API）。</li><li><strong>标准化交互</strong>：提供明确的输入输出规范，例如RESTful API。</li></ul></li></ul><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h3><ul><li><strong>接口</strong>是代码层面的约定，用于统一代码行为（如“怎么用”）。</li><li><strong>API接口</strong>是系统层面的约定，用于功能调用（如“用什么”）。</li></ul><blockquote><p><strong>接口是纯规范（定义“能做什么”），而API接口是规范+交互方式（定义“能做什么”和“如何调用”）</strong></p></blockquote>',8),e=[l];function n(s,c,_,d,u,g){return i(),t("div",null,e)}const P=a(o,[["render",n]]);export{h as __pageData,P as default};
