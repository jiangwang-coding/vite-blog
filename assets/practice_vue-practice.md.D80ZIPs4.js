import{_ as e,c as a,o as t,a4 as r}from"./chunks/framework.D1FvBl6c.js";const b=JSON.parse('{"title":"我宣布PQHD是超级大帅哥！！！","description":"","frontmatter":{},"headers":[],"relativePath":"practice/vue-practice.md","filePath":"practice/vue-practice.md","lastUpdated":null}'),o={name:"practice/vue-practice.md"},c=r('<h1 id="我宣布pqhd是超级大帅哥" tabindex="-1">我宣布PQHD是超级大帅哥！！！ <a class="header-anchor" href="#我宣布pqhd是超级大帅哥" aria-label="Permalink to &quot;我宣布PQHD是超级大帅哥！！！&quot;">​</a></h1><h2 id="web开发整体流程" tabindex="-1">web开发整体流程 <a class="header-anchor" href="#web开发整体流程" aria-label="Permalink to &quot;web开发整体流程&quot;">​</a></h2><p>前端、后端实际上就是浏览器和服务器 前端实现处理数据，包括向后端发送请求，请求后端的数据，之后在网页上展示数据。 后端实现接受请求，向数据库获取数据，处理数据，最后响应请求返回数据到前端。</p><h3 id="以vue-springboot进行前后端分离web开发为例子" tabindex="-1">以vue+springboot进行前后端分离web开发为例子 <a class="header-anchor" href="#以vue-springboot进行前后端分离web开发为例子" aria-label="Permalink to &quot;以vue+springboot进行前后端分离web开发为例子&quot;">​</a></h3><p>前端：在vue实例的data属性声明响应式数据，methods方法处理数据，向后端发送请求，请求数据，最后利用vue的插值表达式或者指令渲染数据到网页上。<br> 后端：以数据持久层+业务层+控制层三层架构的方式进行开发， controller层，接受来自前端的请求，调用业务层数据，返回数据响应请求； service层，调用mapper层获取的数据库数据，然后处理数据，实现各种功能； mapper层，执行SQL语句操作数据库获取数据。</p>',5),i=[c];function s(n,p,d,_,l,h){return t(),a("div",null,i)}const m=e(o,[["render",s]]);export{b as __pageData,m as default};
